// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AirPonic.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250427065846_second")]
    partial class second
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MicroData", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("id"));

                    b.Property<Guid>("DeviceId")
                        .HasColumnType("char(36)");

                    b.Property<float>("Humidity")
                        .HasColumnType("float");

                    b.Property<float>("Light")
                        .HasColumnType("float");

                    b.Property<bool>("LightIsOn")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Temperature")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("TotalLightTime")
                        .HasColumnType("float");

                    b.HasKey("id");

                    b.ToTable("MicroData");
                });
#pragma warning restore 612, 618
        }
    }
}
